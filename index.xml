<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TheAbsnt</title>
    <link>https://theabsnt.github.io/</link>
    <description>Recent content on TheAbsnt</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 24 Jan 2024 23:29:02 +0530</lastBuildDate>
    <atom:link href="https://theabsnt.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>About Me</title>
      <link>https://theabsnt.github.io/about/</link>
      <pubDate>Wed, 24 Jan 2024 23:29:02 +0530</pubDate>
      <guid>https://theabsnt.github.io/about/</guid>
      <description>Q: Who am I? こんにちは！私の名前はスニルです。&#xA;As of now, I am a student and a passionate security researcher sepcialising in malware reverse engineering.&#xA;Q: What on earth is this blog? This blog documents my learnings and analysis in malware reversing. So expect posts related to malware reversing, exploring the mechanics behind malwares and so on.&#xA;Q: How you doing this? I started off by reading the holy book Practical Malware Analysis book and later expanded my interest with certs and courses like:</description>
    </item>
    <item>
      <title>Zero2Auto: Ch03-Practical Analysis Challenge (Part-III)</title>
      <link>https://theabsnt.github.io/posts/z2ach03/part03/</link>
      <pubDate>Thu, 17 Aug 2023 09:35:05 +0530</pubDate>
      <guid>https://theabsnt.github.io/posts/z2ach03/part03/</guid>
      <description>Welcome back.. and i hope you all are having a nice time :).&#xA;In this last part of analysing challenge binary from Z2A: Ch03 (Practical Analysis). We gonna take look at mighty capabilities this binary hiding within it. So, let&amp;rsquo;s get started&amp;hellip;&#xA;Inside main() fig01. decompiled main() of stage03 All this stage does is display a message box and exit&#xA;fig02. message prompted when running stage03 Conclusion gotcha guys, i was making the hype about satge03 capabilties, jokes apart this binary just shows a message box and exit.</description>
    </item>
    <item>
      <title>Zero2Auto: Ch03-Practical Analysis Challenge (Part-II)</title>
      <link>https://theabsnt.github.io/posts/z2ach03/part02/</link>
      <pubDate>Mon, 14 Aug 2023 15:46:46 +0530</pubDate>
      <guid>https://theabsnt.github.io/posts/z2ach03/part02/</guid>
      <description>I encourage you to follow this writeup along with your analysis&#xA;Stage02: Extracted from resource section of main_bin.exe Welcome back, in this part-II of analysing the challenge binary from Z2A: Ch03 (Practical Analysis) we gonna take a thorough look at the second payload extracted from .rsrc section and injected into another process of stage01 (main_bin.exe). So, let&amp;rsquo;s get started from the main of this stage..&#xA;Inside main() fig1. decompiled main() of stage02_1 first gonna grab the file path of itself using GetModuleFileNameA(), to get the executable/file name using sub_404A23 aka strtok(identified by flirt in cutter) using a loop</description>
    </item>
    <item>
      <title>Zero2Auto: Ch03-Practical Analysis Challenge (Part-I)</title>
      <link>https://theabsnt.github.io/posts/z2ach03/part01/</link>
      <pubDate>Mon, 14 Aug 2023 15:25:42 +0530</pubDate>
      <guid>https://theabsnt.github.io/posts/z2ach03/part01/</guid>
      <description>What&amp;rsquo;s up dudes!! This post is a walktrough of challenge binary from Chapter 03: Practical Analysis from Zero2Automated: Advanced Malware Analysis course. This challenge is set to make you comfortable with malware reversing and triage by covering variety of topics like API hashing, Anti-Debugging, PEB manipulation, Process Injection, Thread Context Hijacking, Unpacking Methods, Cryptography Algorithms and so on.&#xA;Base payload main_bin.exe : Stage01 In this Part-I of this series we&amp;rsquo;ll walkthrough the base binary(stage01) ie.</description>
    </item>
  </channel>
</rss>
